/*jslint node: true */
"use strict";
var query_config = {};

query_config.COMMON= {
  CHECK_TABLE_EXIST:"SHOW TABLES LIKE ?",
  CHECK_CURR_SYSTIME:"SELECT SYSDATE FROM DUAL",
  VALIDATE_USER_CREDENTIALS:"SELECT DISTINCT GROUP_NAME FROM USER_LOGIN_DETAILS WHERE END_DATE is NULL and USERNAME=? and PASSWORD=? and STATUS=1",
  DELETE_USER:"DELETE FROM USER_LOGIN_DETAILS where username=?",
  CREATE_USER:"INSERT INTO USER_LOGIN_DETAILS (USERNAME,PASSWORD,GROUP_NAME,CREATE_TS,END_DATE,STATUS) values(?,?,?,CURDATE(),null,1)",
  DELETE_LAZADA_ORDER:"DELETE FROM ORDER_INFO where ORDER_ID in (",
  INSERT_LAZADA_ORDER:"INSERT INTO ORDER_INFO (ORDER_ID,CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME,ORDER_NUMBER,PAYMENT_METHOD,REMARK,DELIVERY_INFO,PRICE,GIFT_OPTION,GIFT_MESSAGE,VOUCHER_CODE,CREATED_AT,UPDATED_AT,ADDRESS_BILLING,ADDRESS_SHIPPING,NATIONAL_REG_NO,ITEM_COUNT,PROMISED_SHIPPING_TIMES,EXTRA_ATTRIBUTES,STATUS,VOUCHER_AMOUNT,SHIPPING_FEE,CREATE_TS,MARKET_PLACE,SELLER_NAME) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,CURRENT_TIMESTAMP(),?,?)",
  MAX_UPDATE_TS:"SELECT DISTINCT CREATE_TS from ORDER_INFO where ID = (select max(id) from ORDER_INFO where MARKET_PLACE=? and SELLER_NAME=?)",
  GETALLSELLER:"SELECT DISTINCT * from ORDER_INFO where SELLER_NAME=? order by ID desc",
  UPDATE_ORDER_INFO:"UPDATE ORDER_INFO SET SHOP_ID=?,PRODUCT_NAME=?,SKU=?,SHOP_SKU=?,SHIPPING_TYPE=?,ITEM_PRICE=?,PAID_PRICE=?,CURRENCY=?,WALLET_CREDITS=?,TAX_AMOUNT=?,SHIPPING_AMOUNT=?,SHIPPING_SERVICE_COST=?,SHIPMENT_PROVIDER=?,IS_DIGITAL=?,DIGITAL_DELIVERY_INFO=?,TRACKING_CODE=?,TRACKING_CODE_PRE=?,REASON=?,REASON_DETAIL=?,PURCHASE_ORDER_ID=?,PURCHASE_ORDER_NUM=?,PACKAGE_ID=?,SHIPPING_PROVIDER_TYPE=?,RETURN_STATUS=?,PRODUCT_MAIN_IMAGE=?,VARIATION=?,PRODUCT_DETAILS_URL=?,INVOICE_NUMBER=? where ORDER_ID=?",
  INSERT_AMAZON_ORDER:"INSERT INTO ORDER_INFO (ORDER_ID,CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME,ORDER_NUMBER,PAYMENT_METHOD,REMARK,DELIVERY_INFO,PRICE,GIFT_OPTION,GIFT_MESSAGE,VOUCHER_CODE,CREATED_AT,UPDATED_AT,ADDRESS_BILLING,ADDRESS_SHIPPING,NATIONAL_REG_NO,ITEM_COUNT,PROMISED_SHIPPING_TIMES,STATUS,SHIPPING_FEE,CREATE_TS,SELLER_NAME,PRODUCT_NAME,SKU,SHOP_SKU,SHIPPING_TYPE,ITEM_PRICE,PAID_PRICE,CURRENCY,TAX_AMOUNT,SHIPPING_AMOUNT,SHIPPING_SERVICE_COST,IS_DIGITAL,PURCHASE_ORDER_ID,PURCHASE_ORDER_NUM,SHIPPING_PROVIDER_TYPE,INVOICE_NUMBER,GIFT_WRAP_PRICE,MARKET_PLACE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,CURRENT_TIMESTAMP(),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)",
  INSERT_ELEVEN_STATES_ORDER:"INSERT INTO ORDER_INFO (ORDER_ID,CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME,ORDER_NUMBER,PAYMENT_METHOD,REMARK,DELIVERY_INFO,PRICE,GIFT_OPTION,GIFT_MESSAGE,VOUCHER_CODE,CREATED_AT,UPDATED_AT,ADDRESS_BILLING,ADDRESS_SHIPPING,NATIONAL_REG_NO,ITEM_COUNT,PROMISED_SHIPPING_TIMES,STATUS,SHIPPING_FEE,CREATE_TS,SELLER_NAME,PRODUCT_NAME,SKU,SHOP_SKU,SHIPPING_TYPE,ITEM_PRICE,PAID_PRICE,CURRENCY,TAX_AMOUNT,SHIPPING_AMOUNT,SHIPPING_SERVICE_COST,IS_DIGITAL,PURCHASE_ORDER_ID,PURCHASE_ORDER_NUM,SHIPPING_PROVIDER_TYPE,INVOICE_NUMBER,GIFT_WRAP_PRICE,MARKET_PLACE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,CURRENT_TIMESTAMP(),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)",
  INSERT_SEARS_ORDER:"insert into ORDER_INFO(ORDER_ID,CUSTOMER_FIRST_NAME,ORDER_NUMBER,PRICE,CREATED_AT,UPDATED_AT,ADDRESS_BILLING,ADDRESS_SHIPPING,ITEM_COUNT,PROMISED_SHIPPING_TIMES,STATUS,SHIPPING_FEE,CREATE_TS,MARKET_PLACE,SELLER_NAME,PRODUCT_NAME,SHIPPING_TYPE,ITEM_PRICE,CURRENCY,SHIPPING_AMOUNT,TRACKING_CODE,PURCHASE_ORDER_ID,PURCHASE_ORDER_NUM,CUSTOMER_EMAIL) values(?,?,?,?,?,?,?,?,?,?,?,?,CURRENT_TIMESTAMP(),?,?,?,?,?,'USD',?,?,?,?,?)",
  INSERT_EBAY_ORDER:"insert into ORDER_INFO(ORDER_ID,CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME,ORDER_NUMBER,PAYMENT_METHOD,PRICE,CREATED_AT,ADDRESS_BILLING,ADDRESS_SHIPPING,STATUS,SHIPPING_FEE,CREATE_TS,MARKET_PLACE,SELLER_NAME,PRODUCT_NAME,SKU,SHOP_SKU,SHIPPING_TYPE,ITEM_PRICE,PAID_PRICE,CURRENCY,TAX_AMOUNT,SHIPPING_AMOUNT,SHIPMENT_PROVIDER,TRACKING_CODE,SHIPPING_PROVIDER_TYPE,CUSTOMER_EMAIL) values(?,?,?,?,?,?,?,?,?,?,?,CURRENT_TIMESTAMP(),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)",
  GET_INVOICE_DETAILS:"select ADDRESS_BILLING, ORDER_ID, CREATED_AT, PRODUCT_NAME, ITEM_COUNT, PRICE, ITEM_PRICE from ORDER_INFO where ID = ",
  INSERT_FLIPKART_ORDER:"INSERT INTO ORDER_INFO (ORDER_ID,CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME,ORDER_NUMBER,PAYMENT_METHOD,REMARK,DELIVERY_INFO,PRICE,GIFT_OPTION,GIFT_MESSAGE,VOUCHER_CODE,CREATED_AT,UPDATED_AT,ADDRESS_BILLING,ADDRESS_SHIPPING,NATIONAL_REG_NO,ITEM_COUNT,PROMISED_SHIPPING_TIMES,STATUS,SHIPPING_FEE,CREATE_TS,SELLER_NAME,PRODUCT_NAME,SKU,SHOP_SKU,SHIPPING_TYPE,ITEM_PRICE,PAID_PRICE,CURRENCY,TAX_AMOUNT,SHIPPING_AMOUNT,SHIPPING_SERVICE_COST,IS_DIGITAL,PURCHASE_ORDER_ID,PURCHASE_ORDER_NUM,SHIPPING_PROVIDER_TYPE,INVOICE_NUMBER,GIFT_WRAP_PRICE,MARKET_PLACE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,CURRENT_TIMESTAMP(),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)",
  UPDATE_FLIPKART_ORDER:"UPDATE ORDER_INFO SET SHIPMENT_PROVIDER=?,TRACKING_CODE=?,CUSTOMER_FIRST_NAME=?,CUSTOMER_LAST_NAME=?,DELIVERY_INFO=?,ADDRESS_BILLING=?,ADDRESS_SHIPPING=? where ORDER_ID=?",
};

query_config.ADMIN = {
    GET_LAZADA_PRODUCT_COUNT: "select sum(ITEM_COUNT) as PROD_COUNT from ORDER_INFO where SELLER_NAME=? and PRODUCT_NAME=? and MARKET_PLACE='lazada'",
    GET_AMAZON_PRODUCT_COUNT: "select sum(ITEM_COUNT) as PROD_COUNT from ORDER_INFO where SELLER_NAME=? and PRODUCT_NAME=? and MARKET_PLACE='amazon'",
    GET_AMAZON_CA_PRODUCT_COUNT: "select sum(ITEM_COUNT) as PROD_COUNT from ORDER_INFO where SELLER_NAME=? and PRODUCT_NAME=? and MARKET_PLACE='amazonCA'",
    GET_AMAZON_MX_PRODUCT_COUNT: "select sum(ITEM_COUNT) as PROD_COUNT from ORDER_INFO where SELLER_NAME=? and PRODUCT_NAME=? and MARKET_PLACE='amazonMX'",
    GET_AMAZON_UK_PRODUCT_COUNT: "select sum(ITEM_COUNT) as PROD_COUNT from ORDER_INFO where SELLER_NAME=? and PRODUCT_NAME=? and MARKET_PLACE='amazonUK'",
    GET_AMAZON_FR_PRODUCT_COUNT: "select sum(ITEM_COUNT) as PROD_COUNT from ORDER_INFO where SELLER_NAME=? and PRODUCT_NAME=? and MARKET_PLACE='amazonFR'",
    GET_AMAZON_DE_PRODUCT_COUNT: "select sum(ITEM_COUNT) as PROD_COUNT from ORDER_INFO where SELLER_NAME=? and PRODUCT_NAME=? and MARKET_PLACE='amazonDE'",
    GET_AMAZON_IT_PRODUCT_COUNT: "select sum(ITEM_COUNT) as PROD_COUNT from ORDER_INFO where SELLER_NAME=? and PRODUCT_NAME=? and MARKET_PLACE='amazonIT'",
    GET_AMAZON_ES_PRODUCT_COUNT: "select sum(ITEM_COUNT) as PROD_COUNT from ORDER_INFO where SELLER_NAME=? and PRODUCT_NAME=? and MARKET_PLACE='amazonES'",
    GET_SEARS_PRODUCT_COUNT: "select sum(ITEM_COUNT) as PROD_COUNT from ORDER_INFO where SELLER_NAME=? and PRODUCT_NAME=? and MARKET_PLACE='sears'",
    GET_ELEVEN_STREET_PRODUCT_COUNT: "select sum(ITEM_COUNT) as PROD_COUNT from ORDER_INFO where SELLER_NAME=? and PRODUCT_NAME=? and MARKET_PLACE='elevenStreet'",
    GET_UNIQUE_PRODUCT: "select DISTINCT PRODUCT_NAME from ORDER_INFO where SELLER_NAME=?",
    DISABLE_USER: "UPDATE USER_LOGIN_DETAILS set STATUS=0 where END_DATE is null and username=?",
    ENABLE_USER: "UPDATE USER_LOGIN_DETAILS set STATUS=1 where END_DATE is null and username=?",
    CREATEUSERINFO: "INSERT INTO USER_DESCRIPTION (USERNAME,ADDRESS,DESCRIPTION,FIRST_NAME,LAST_NAME,CONTACT_NUMBER) values (?,?,?,?,?,?)",
    USER_EXIST: "select DISTINCT USERNAME from USER_LOGIN_DETAILS where UPPER(USERNAME) = UPPER(?) and END_DATE is null",
    UNALLOCATED_USER: "select DISTINCT USERNAME from USER_LOGIN_DETAILS where GROUP_NAME='SELLER' and USERNAME not in (select SELLER_USER_ID from ASSOCIATE_SELLER_MANAGER)",
    ALLOCATED_USER: "select DISTINCT SELLER_USER_ID from ASSOCIATE_SELLER_MANAGER where MANAGER_USER_ID =?",
    DELETE_ASSOCIATED_SELLER: "delete from ASSOCIATE_SELLER_MANAGER where MANAGER_USER_ID =?",
    INSERT_ASSOCAITED_SELLER: "insert into ASSOCIATE_SELLER_MANAGER (MANAGER_USER_ID,SELLER_USER_ID) values (?,?)",
    GET_ALL_USER: "select DISTINCT a.username as  USERNAME,GROUP_NAME,STATUS,ADDRESS,DESCRIPTION,FIRST_NAME,LAST_NAME,CONTACT_NUMBER from USER_LOGIN_DETAILS a,USER_DESCRIPTION b where a.username=b.username and a.end_date is null",
    DELETE_USER: "DELETE USER_LOGIN_DETAILS,USER_DESCRIPTION FROM USER_LOGIN_DETAILS LEFT JOIN USER_DESCRIPTION ON USER_LOGIN_DETAILS.username=USER_DESCRIPTION.username LEFT JOIN ASSOCIATE_SELLER_MANAGER ON USER_DESCRIPTION.username=ASSOCIATE_SELLER_MANAGER.SELLER_USER_ID where USER_LOGIN_DETAILS.USERNAME=?",
    UPDATE_USER_INFO: "UPDATE USER_DESCRIPTION a,USER_LOGIN_DETAILS b set ADDRESS=?,DESCRIPTION=?,FIRST_NAME=?,LAST_NAME=?,CONTACT_NUMBER=?,b.STATUS=? where a.username=? and b.username=?",
    GET_ALL_MANAGER: "SELECT DISTINCT USERNAME from USER_LOGIN_DETAILS where GROUP_NAME='MANAGER' and END_DATE is null and status=1",
    CREATE_MARKET_PLACE: "INSERT INTO MARKET_PLACE_CONFIGURATION (MARKET_PLACE_NAME,EPR_UPLOAD_NEW_CATALOGUE,EPR_UPLOAD_UPDATE_CATALOGUE,EPR_UPLOAD_UPDATE_PRICE,EPR_GET_ORDER,UPLOAD_NEW_CATALOGUE_TEMPLATE,UPLOAD_UPDATE_CATALOGUE_TEMPLATE,UPLOAD_UPDATE_PRICE_TEMPLATE,CREATE_DATE,STATUS) values(?,?,?,?,?,?,?,?,CURDATE(),1)",
    UPDATE_MARKET_PLACE: "update MARKET_PLACE_CONFIGURATION set EPR_UPLOAD_NEW_CATALOGUE=?,EPR_UPLOAD_UPDATE_CATALOGUE=?,EPR_UPLOAD_UPDATE_PRICE=?,EPR_GET_ORDER=?,UPLOAD_NEW_CATALOGUE_TEMPLATE=?,UPLOAD_UPDATE_CATALOGUE_TEMPLATE=?,UPLOAD_UPDATE_PRICE_TEMPLATE=?,UPDATE_DATE=CURDATE(),STATUS=? where MARKET_PLACE_NAME=?",
    DELETE_MARKET_PLACE: "DELETE from MARKET_PLACE_CONFIGURATION where MARKET_PLACE_NAME=?",
    GET_ALL_MARKET_PLACE: "SELECT DISTINCT MARKET_PLACE_NAME,EPR_UPLOAD_NEW_CATALOGUE,EPR_UPLOAD_UPDATE_CATALOGUE,EPR_UPLOAD_UPDATE_PRICE,EPR_GET_ORDER,UPLOAD_NEW_CATALOGUE_TEMPLATE,UPLOAD_UPDATE_CATALOGUE_TEMPLATE,UPLOAD_UPDATE_PRICE_TEMPLATE,status from MARKET_PLACE_CONFIGURATION",
};

query_config.SELLER= {
  INSERT_NEW_PRODUCT_OLD_DELETE:"INSERT INTO PRODUCT_CATALOGUE (CREATE_TS,UPDATE_TS,SKU,PRICE,QUANTITY,PRODUCT_ID,PRODUCT_ID_TYPE,CONDITION_TYPE,CONDITION_NOTE,ASIN_HINT,TITLE,PRODUCT_TAX_CODE,OPERATION_TYPE,SALE_PRICE,SALE_START_DATE,SALE_END_DATE,LEADTIME_TO_SHIP,LAUNCH_DATE,GIFTWRAP_AVAILABLE,GIFT_MESSAGE_AVAILABLE,FULFILLMENT_CENTER_ID,MAIN_OFFER_IMAGE,OFFER_IMAGE1,OFFER_IMAGE2,OFFER_IMAGE3,OFFER_IMAGE4,OFFER_IMAGE5,OFFER_IMAGE6,OFFER_IMAGE7,OFFER_IMAGE8,OFFER_IMAGE9,OFFER_IMAGE10,SELLER_NAME,STATUS) VALUES (CURDATE(),CURDATE(),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,'new')",
  INSERT_NEW_PRODUCT:"INSERT INTO PRODUCT_CATALOGUE (CREATE_TS,UPDATE_TS,STATUS,SELLER_NAME,item_type,item_sku,external_product_id,external_product_id_type,brand_name,item_name,manufacturer,department_name1,department_name2,department_name3,department_name4,department_name5,material_type1,material_type2,material_type3,material_type4,material_type5,metal_type,setting_type,gem_type,standard_price,quantity,merchant_shipping_group_name,main_offer_image,swatch_image_url,offer_image1,offer_image2,offer_image3,offer_image4,offer_image5,offer_image6,offer_image7,offer_image8,offer_image,feed_product_type,update_delete,product_description,bullet_point1,bullet_point2,bullet_point3,bullet_point4,bullet_point5,target_audience_keywords1,target_audience_keywords2,target_audience_keywords3,target_audience_keywords4,target_audience_keywords5,specific_uses_keywords1,specific_uses_keywords2,specific_uses_keywords3,specific_uses_keywords4,specific_uses_keywords5,generic_keywords1,generic_keywords2,generic_keywords3,generic_keywords4,generic_keywords5,website_shipping_weight,website_shipping_weight_unit_of_measure,display_dimensions_unit_of_measure,item_display_diameter,item_display_height,item_display_width,item_display_length,item_length,item_width,item_height,item_dimensions_unit_of_measure,item_display_weight,item_display_weight_unit_of_measure,fulfillment_center_id,package_length,package_height,package_width,package_dimensions_unit_of_measure,package_weight,package_weight_unit_of_measure,country_of_origin,prop_65,cpsia_cautionary_statement1,cpsia_cautionary_statement2,cpsia_cautionary_statement3,cpsia_cautionary_statement4,cpsia_cautionary_description,fabric_type1,fabric_type2,fabric_type3,fabric_type4,fabric_type5,fabric_type6,fabric_type7,fabric_type8,fabric_type9,fabric_type10,import_designation,condition_type,condition_note,currency,product_site_launch_date,product_tax_code,list_price,sale_price,sale_from_date,sale_end_date,merchant_release_date,item_package_quantity,fulfillment_latency,restock_date,max_aggregate_ship_quantity,offering_can_be_gift_messaged,offering_can_be_giftwrapped,is_discontinued_by_manufacturer,max_order_quantity,offering_start_date) VALUES (CURDATE(),CURDATE(),'new',?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)",
  GET_ALL_SELLER_PRODUCT:"select * from SELLER_PRODUCT_UPLOAD where lower(SELLER_ID) = lower(?)",
  PRODUCT_LEVEL_INVENTORY:"select DISTINCT A.name, A.quantity, (select count(PRODUCT_NAME) from my_db.ORDER_INFO where PRODUCT_NAME = A.name) AS SoldQty, cast(A.quantity - (select count(PRODUCT_NAME) from my_db.ORDER_INFO where PRODUCT_NAME = A.name) as char(1)) AS RemainingQty from my_db.SELLER_PRODUCT_UPLOAD A, my_db.ORDER_INFO B where A.SELLER_ID = ? AND B.SELLER_NAME = ? order by SoldQty desc",
  OVERALL_INVENTORY_WORTH:"select sum(quantity * price) as Overall_Inventory_Worth from my_db.SELLER_PRODUCT_UPLOAD where SELLER_ID = ?",
  INVENTORY_WORTH_BY_CATEGORY:"select DISTINCT A.category, (select sum(quantity * price) from my_db.SELLER_PRODUCT_UPLOAD where category = A.category) as Overall_Inventory_Worth from my_db.SELLER_PRODUCT_UPLOAD A where SELLER_ID = ?",
  NUMBER_OF_PRODUCTS_TO_BE_RESTOCKED:"Select DISTINCT A.name, A.quantity, cast(A.quantity - (select count(PRODUCT_NAME) from my_db.ORDER_INFO where PRODUCT_NAME = A.name) as char(1)) AS RemainingQty, ((A.quantity - (select count(PRODUCT_NAME) from my_db.ORDER_INFO where PRODUCT_NAME = A.name)) * 100 / A.quantity) as Percentage_Remaining from my_db.SELLER_PRODUCT_UPLOAD A, my_db.ORDER_INFO B where ((A.quantity - (select count(PRODUCT_NAME) from my_db.ORDER_INFO where PRODUCT_NAME = A.name)) * 100 / A.quantity) < 10 AND A.SELLER_ID = ? AND B.SELLER_NAME = ?",
  OVERALL_PRODUCTS_SOLD:"select DISTINCT A.PRODUCT_NAME, (select count(PRODUCT_NAME) from my_db.ORDER_INFO where PRODUCT_NAME = A.PRODUCT_NAME) as Total_Orders from my_db.ORDER_INFO A where A.SELLER_NAME = ? order by Total_Orders DESC LIMIT 10",
  TOP_PRODUCT_SOLD_BY_CATEGORY:"select DISTINCT A.category, (select count(PRODUCT_NAME) from my_db.ORDER_INFO where PRODUCT_NAME IN(select name from my_db.SELLER_PRODUCT_UPLOAD where category = A.category)) as Total_Orders from my_db.SELLER_PRODUCT_UPLOAD A where A.SELLER_ID = ? order by Total_Orders DESC LIMIT 10",
  TOP_PRODUCT_SOLD_BY_REGION:"select DISTINCT A.MARKET_PLACE, (select count(MARKET_PLACE) from my_db.ORDER_INFO where MARKET_PLACE = A.MARKET_PLACE) as Total_Orders from my_db.ORDER_INFO A where A.SELLER_NAME = ? order by Total_Orders DESC LIMIT 10",
  UPDATE_PRODUCT:"UPDATE SELLER_PRODUCT_UPLOAD set UPDATE_TS=CURDATE(),sellerSku=?,brand=?,name=?,color=?,category=?,materialOrFabric=?,productDescription=?,model=?,gender=?,quantity=?,price=?,image1=?,image2=?,image3=?,image4=?,image5=?,image6=?,image7=?,packageLength=?,packageWidth=?,packageHeight=?,packageWeight=?,watch_external_product_id=?,watch_external_product_id_type=?,watch_item_name=?,watch_manufacturer=?,watch_model=?,watch_part_number=?,watch_standard_price=?,watch_merchant_shipping_group_name=?,watch_target_audience_keywords1=?,watch_target_audience_keywords2=?,watch_target_audience_keywords3=?,watch_target_audience_keywords4=?,watch_target_audience_keywords5=?,watch_main_image_url=?,watch_band_material_type=?,watch_band_color=?,watch_dial_color=?,watch_display_type=?,watch_movement_type=?,shoes_feed_product_type=?,shoes_item_sku=?,shoes_merchant_shipping_group_name=?,shoes_outer_material_type1=?,shoes_outer_material_type2=?,shoes_material_type1=?,shoes_material_type2=?,shoes_color_name=?,shoes_size_name=?,baby_item_sku=?,baby_item_name=?,baby_quantity=?,baby_standard_price=?,baby_merchant_shipping_group_name=?,baby_color_name=?,baby_mfg_minimum=?,baby_mfg_minimum_unit_of_measure=?,beauty_item_sku=?,beauty_item_name=?,beauty_part_number=?,beauty_merchant_shipping_group_name=?,beauty_recommended_browse_nodes=?,computers_item_sku=?,computers_item_name=?,computers_merchant_shipping_group_name=?,computers_recommended_browse_nodes=?,computers_hard_disk_size1=?,computers_hard_disk_size2=?,computers_hard_disk_size3=?,computers_hard_disk_size4=?,computers_hard_disk_size5=?,computers_hard_disk_size6=?,computers_hard_disk_size7=?,computers_hard_disk_size8=?,computers_hard_disk_interface1=?,computers_hard_disk_interface2=?,computers_hard_disk_interface3=?,computers_hard_disk_interface4=?,computers_system_ram_type1=?,computers_system_ram_type2=?,computers_system_ram_type3=?,computers_system_ram_type4=?,computers_system_ram_type5=?,computers_system_ram_type6=?,computers_system_ram_type7=?,computers_operating_system=?,food_merchant_shipping_group_name=?,food_material_features=?,food_fc_shelf_life=?,food_fc_shelf_life_pad_time=?,food_product_expiration_type=?,furniture_item_name=?,furniture_merchant_shipping_group_name=?,sports_condition_type=?,sports_merchant_shipping_group_name=?,sports_item_type_name=?,toys_item_name=?,toys_merchant_shipping_group_name=?,toys_color_name=?,toys_mfg_minimum=?,clothing_merchant_shipping_group_name=?,clothing_color_name=?,clothing_department_name=?,giftcard_product_description=?,giftcard_item_type=?,giftcard_merchant_shipping_group_name=?,giftcard_bullet_point1=?,giftcard_bullet_point2=?,giftcard_bullet_point3=?,giftcard_bullet_point4=?,giftcard_bullet_point5=?,giftcard_target_audience_keywords1=?,giftcard_target_audience_keywords2=?,giftcard_target_audience_keywords3=?,giftcard_legal_disclaimer_description=?,giftcard_state_string=?,giftcard_format=?,giftcard_genre=?,health_item_package_quantity=?,health_merchant_shipping_group_name=?,health_unit_count=?,health_unit_count_type=?,home_merchant_shipping_group_name=?,home_color_name=?,home_material_type1=?,home_material_type2=?,home_material_type3=?,home_material_type4=?,home_material_type5=?,home_material_type6=?,home_material_type7=?,home_material_type8=?,home_material_type9=?,home_material_type10=?,home_thread_count=?,luggage_part_number=?,luggage_merchant_shipping_group_name=?,luggage_color_name=?,luggage_color_map=?,luggage_material_type1=?,luggage_material_type2=?,luggage_material_type3=?,luggage_material_type4=?,luggage_material_type5=?,musical_model=?,musical_merchant_shipping_group_name=?,office_model=?,office_merchant_shipping_group_name=?,office_list_price_with_tax=?,pet_merchant_shipping_group_name=?,jewellery_condition_type=?,jewellery_merchant_shipping_group_name=?,jewellery_color_map=?,jewellery_department_name=?,jewellery_material_type=?,jewellery_ring_size=?,jewellery_item_shape=? where sellerSku=?",
};

query_config.MANAGER = {
    UPDATE_PRODUCT_STATUS: "UPDATE PRODUCT_CATALOGUE set STATUS=? where ID=?",
    INSERT_MP_UPLOAD_STATUS: "INSERT INTO MARKET_PLACE_UPLOAD_STATUS (CREATE_TS,UPDATE_TS,PRODUCT_CATALOGUE_ID,AMAZON_UPLOAD_ID) VALUES (CURDATE(),CURDATE(),?,?)",
};

query_config.DASHBOARD = {

    INVENTORY_QUANTITY_PRICE_LAZADA: "SELECT sum(quantity) as quantity ,sum(price) as price FROM SELLER_PRODUCT_UPLOAD where lazada_upload_status = 'uploaded'",
    INVENTORY_QUANTITY_PRICE_ELEVEN: "SELECT sum(quantity) as quantity ,sum(price) as price FROM SELLER_PRODUCT_UPLOAD where elevenStreet_upload_status = 'uploaded'",
    INVENTORY_QUANTITY_PRICE_SEARS: "SELECT sum(quantity) as quantity ,sum(price) as price FROM SELLER_PRODUCT_UPLOAD where sears_upload_status = 'uploaded'",
    INVENTORY_QUANTITY_PRICE_EBAY: "SELECT sum(quantity) as quantity ,sum(price) as price FROM SELLER_PRODUCT_UPLOAD where ebay_upload_status = 'uploaded'",
    INVENTORY_QUANTITY_PRICE_AMAZUS: "SELECT sum(quantity) as quantity ,sum(price) as price FROM SELLER_PRODUCT_UPLOAD where amazonUS_upload_status = 'uploaded'",
    INVENTORY_QUANTITY_PRICE_AMAZCA: "SELECT sum(quantity) as quantity ,sum(price) as price FROM SELLER_PRODUCT_UPLOAD where amazonCA_upload_status = 'uploaded'",
    INVENTORY_QUANTITY_PRICE_AMAZMX: "SELECT sum(quantity) as quantity ,sum(price) as price FROM SELLER_PRODUCT_UPLOAD where amazonMX_upload_status = 'uploaded'",
    INVENTORY_QUANTITY_PRICE_AMAZUK: "SELECT sum(quantity) as quantity ,sum(price) as price FROM SELLER_PRODUCT_UPLOAD where amazonUK_upload_status = 'uploaded'",
    INVENTORY_QUANTITY_PRICE_AMAZFR: "SELECT sum(quantity) as quantity ,sum(price) as price FROM SELLER_PRODUCT_UPLOAD where amazonFR_upload_status = 'uploaded'",
    INVENTORY_QUANTITY_PRICE_AMAZDE: "SELECT sum(quantity) as quantity ,sum(price) as price FROM SELLER_PRODUCT_UPLOAD where amazonDE_upload_status = 'uploaded'",
    INVENTORY_QUANTITY_PRICE_AMAZIT: "SELECT sum(quantity) as quantity ,sum(price) as price FROM SELLER_PRODUCT_UPLOAD where amazonIT_upload_status = 'uploaded'",
    INVENTORY_QUANTITY_PRICE_AMAZES: "SELECT sum(quantity) as quantity ,sum(price) as price FROM SELLER_PRODUCT_UPLOAD where amazonES_upload_status = 'uploaded'",
    INVENTORY_QUANTITY_PRICE_CDISCOUNT: "SELECT sum(quantity) as quantity ,sum(price) as price FROM SELLER_PRODUCT_UPLOAD where cDiscount_upload_status = 'uploaded'",
    INVENTORY_QUANTITY_PRICE_ETSY: "SELECT sum(quantity) as quantity ,sum(price) as price FROM SELLER_PRODUCT_UPLOAD where etsy_upload_status = 'uploaded'",

    MARKET_PLACE_ORDERS_SALES: "SELECT SUM(ITEM_COUNT) AS ORDERS,ROUND(SUM(PAID_PRICE), 2) AS SALES FROM ORDER_INFO WHERE SELLER_NAME = ? AND PAID_PRICE > 0 AND DATE(CREATED_AT) BETWEEN ?  AND ? AND MARKET_PLACE = ?",
    TOTAL_ORDERS_SALES: "SELECT SUM(ITEM_COUNT) AS ORDERS,ROUND(SUM(PAID_PRICE), 2) AS SALES FROM ORDER_INFO WHERE SELLER_NAME = ? AND PAID_PRICE > 0 AND DATE(CREATED_AT) BETWEEN ?  AND ?",
    ORDERS_SALES_GRAPH: "SELECT DATE(CREATED_AT) DATE, SUM(ITEM_COUNT) AS ORDERS,ROUND(SUM(PAID_PRICE), 2) AS SALES FROM ORDER_INFO WHERE SELLER_NAME = ? AND PAID_PRICE > 0 AND DATE(CREATED_AT) BETWEEN ?  AND ? AND MARKET_PLACE= ? GROUP BY DATE(CREATED_AT)",
    TOTAL_STOCKS_QUERY: "SELECT PRODUCT_NAME, IFNULL((SELECT QUANTITY FROM SELLER_PRODUCT_UPLOAD WHERE NAME = OI.PRODUCT_NAME), 0) AS UPLOADED, IF((IFNULL((SELECT QUANTITY FROM SELLER_PRODUCT_UPLOAD WHERE NAME = OI.PRODUCT_NAME), 0) - SUM(ITEM_COUNT)) < 0, 0, IFNULL((SELECT QUANTITY FROM SELLER_PRODUCT_UPLOAD WHERE NAME = OI.PRODUCT_NAME), 0) - SUM(ITEM_COUNT)) AS OUTOFSTOCK, SUM(ITEM_COUNT) AS ORDERS, ROUND(SUM(PAID_PRICE), 2) AS SALES FROM ORDER_INFO OI WHERE SELLER_NAME = ? AND PAID_PRICE > 0 GROUP BY PRODUCT_NAME",

    TOTAL_PENDING_ORDERS : "SELECT MARKET_PLACE,COUNT(ORDER_ID) AS PENDING FROM ORDER_INFO WHERE STATUS='PENDING' AND SELLER_NAME = ? GROUP BY MARKET_PLACE",
    TOTAL_ORDERS_MARKET_PLACE: "SELECT MARKET_PLACE, SUM(ITEM_COUNT) AS ORDERS,ROUND(SUM(PAID_PRICE), 2) AS SALES FROM ORDER_INFO WHERE SELLER_NAME = ? AND PAID_PRICE > 0 AND DATE(CREATED_AT) BETWEEN ?  AND ? GROUP BY MARKET_PLACE",
};


module.exports = query_config;
